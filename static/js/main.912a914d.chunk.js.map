{"version":3,"sources":["Filter/Filter.module.css","ContactForm/ContactForm.module.css","ContactForm/ContactForm.js","ContactsList/ContactsList.js","Filter/Filter.js","App.js","index.js","ContactsList/ContactsList.module.css"],"names":["module","exports","INITIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuidv4","resetForm","onCheckUnique","alert","this","className","styles","form","onSubmit","input","type","placeholder","onChange","button","Component","ContactListItem","onRemove","item","onClick","ContactsList","contacts","length","title","map","contact","Filter","filter","App","number","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.912a914d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__DCU1z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__16KF8\",\"button\":\"ContactForm_button__3ynrv\"};","import { Component } from 'react';\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    name: '',\r\n    phone: '',\r\n};\r\n\r\nclass ContactForm extends Component{\r\n    state = INITIAL_STATE;\r\n\r\n    handleChangeForm = ({ target }) => {\r\n        const { name, value } = target\r\n        this.setState({ [name]: value })\r\n    };\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { name, phone } = this.state;\r\n        const { onAdd } = this.props;\r\n\r\n        const isValidatedForm = this.validateForm();\r\n\r\n        if (!isValidatedForm) return\r\n        onAdd({ id: uuidv4(), name, phone });\r\n        this.resetForm();\r\n    };\r\n\r\n    validateForm = () => {\r\n        const { name, phone } = this.state;\r\n        const { onCheckUnique } = this.props;\r\n        if (!name || !phone) {\r\n            alert('Some filed is empry')\r\n            return false\r\n        };\r\n\r\n        return onCheckUnique(name)\r\n    };\r\n\r\n    resetForm = () => this.setState(INITIAL_STATE);\r\n\r\n\r\n    render() {\r\n        const { name, phone} = this.state\r\n        return (\r\n            <form className={styles.form}  onSubmit={this.handleFormSubmit} >\r\n                <input className={styles.input} type='text' name='name' placeholder='Enter name' value={name} onChange={this.handleChangeForm} />\r\n                <br/>\r\n                <input className={styles.input} type='tel' name='phone' placeholder='Enter phone number' value={phone} onChange={this.handleChangeForm} />\r\n                <br/>\r\n                <button className={styles.button} type='submit'>Add Contact</button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nContactForm.propTypes = {\r\n    onAdd: PropTypes.func,\r\n    onCheckUnique: PropTypes.func,\r\n};\r\n\r\n\r\n\r\nexport default ContactForm;\r\n","import styles from './ContactsList.module.css';\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\r\n    return (\r\n        <li >\r\n            <span className={styles.item}>{name}:{phone}</span> <button className={styles.button} onClick={() => onRemove(id)}>delete</button>\r\n        </li>\r\n    )\r\n};\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n    if (contacts.length === 0) return null\r\n    return (\r\n        <ul className={styles.title}>\r\n            {contacts.map((contact) => (\r\n                <ContactListItem{...contact} onRemove={onRemove}/>\r\n            ))}\r\n        </ul>\r\n    )\r\n};\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object),\r\n    onRemove: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;","import styles from './Filter.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n    return (\r\n        <input className={styles.input}\r\n            type='text'\r\n            name='filter'\r\n            value={filter}\r\n            onChange={({ target }) => onChange(target.value)}\r\n            placeholder='Enter name for Search'\r\n        ></input>\r\n    )\r\n};\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import { Component } from 'react'\n\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactsList from \"./ContactsList/ContactsList\";\nimport Filter from './Filter/Filter';\n\nexport default class App extends Component{\n  state = {\n    contacts: [{id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},],\n    filter:'',\n  };\n\n  handleAddContact = (newContact) =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n  \n  handleCheckUniqueContact = (name) => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find((contact) => contact.name === name);\n\n    isExistContact && alert('Contact is already exist');\n\n    return !isExistContact\n  };\n\n  handleRemoveContact = (id) => this.setState(({ contacts }) => ({ contacts: contacts.filter(contact => contact.id !== id) }));\n    \n  handleFilterChange = (filter) => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact=>contact.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return <>\n      <div className='container' >\n        <h2 className='title'>Form Contact</h2>\n      <ContactForm onAdd={this.handleAddContact} onCheckUnique={this.handleCheckUniqueContact} />\n      <h2 className='title'>Contacts List</h2>\n      <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactsList contacts={visibleContacts} onRemove={this.handleRemoveContact} />\n      </div>\n    </>\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__30OV2\",\"button\":\"ContactsList_button__1MZBk\"};"],"sourceRoot":""}